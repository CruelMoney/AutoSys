//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(StudyConfigurationServer.Models.Data.StudyContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets567a6c2564b279345b00ab0180a25beffffe8f2d5e9235dea70c8bb8e9efcf75))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets567a6c2564b279345b00ab0180a25beffffe8f2d5e9235dea70c8bb8e9efcf75 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "567a6c2564b279345b00ab0180a25beffffe8f2d5e9235dea70c8bb8e9efcf75"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Criteria")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Stage")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Study")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.Item")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.StudyTask")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.TaskRequestedData")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.DataField")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.User")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.UserStudies")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.Team")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.TeamUser")
            {
                return GetView10();
            }

            if (extentName == "StudyContext.Criteria")
            {
                return GetView11();
            }

            if (extentName == "StudyContext.Stage_Criteria")
            {
                return GetView12();
            }

            if (extentName == "StudyContext.Stages")
            {
                return GetView13();
            }

            if (extentName == "StudyContext.Study_Stages")
            {
                return GetView14();
            }

            if (extentName == "StudyContext.Studies")
            {
                return GetView15();
            }

            if (extentName == "StudyContext.Team_Studies")
            {
                return GetView16();
            }

            if (extentName == "StudyContext.Items")
            {
                return GetView17();
            }

            if (extentName == "StudyContext.Study_Items")
            {
                return GetView18();
            }

            if (extentName == "StudyContext.Tasks")
            {
                return GetView19();
            }

            if (extentName == "StudyContext.StudyTask_Stage")
            {
                return GetView20();
            }

            if (extentName == "StudyContext.EnteredData")
            {
                return GetView21();
            }

            if (extentName == "StudyContext.TaskRequestedData_StudyTask")
            {
                return GetView22();
            }

            if (extentName == "StudyContext.User_Tasks")
            {
                return GetView23();
            }

            if (extentName == "StudyContext.DataFields")
            {
                return GetView24();
            }

            if (extentName == "StudyContext.TaskRequestedData_Data")
            {
                return GetView25();
            }

            if (extentName == "StudyContext.Users")
            {
                return GetView26();
            }

            if (extentName == "StudyContext.UserStudies")
            {
                return GetView27();
            }

            if (extentName == "StudyContext.UserStudies_Stage")
            {
                return GetView28();
            }

            if (extentName == "StudyContext.UserStudies_User")
            {
                return GetView29();
            }

            if (extentName == "StudyContext.Teams")
            {
                return GetView30();
            }

            if (extentName == "StudyContext.Team_Users")
            {
                return GetView31();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Criteria.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Criteria
        [CodeFirstDatabaseSchema.Criteria](T3.Criteria_Id, T3.Criteria_Name, T3.Criteria_Description, T3.Criteria_DataType, T3.Criteria_Rule, T3.[Criteria.Stage_Id])
    FROM (
        SELECT T1.Criteria_Id, T1.Criteria_Name, T1.Criteria_Description, T1.Criteria_DataType, T1.Criteria_Rule, T2.[Criteria.Stage_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS Criteria_Id, 
                T.Name AS Criteria_Name, 
                T.Description AS Criteria_Description, 
                CAST(T.DataType AS [Edm.Int32]) AS Criteria_DataType, 
                CAST(T.Rule AS [Edm.Int32]) AS Criteria_Rule, 
                True AS _from0
            FROM StudyContext.Criteria AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.Stage_Criteria_Target).Id AS Criteria_Id, 
                Key(T.Stage_Criteria_Source).Id AS [Criteria.Stage_Id], 
                True AS _from1
            FROM StudyContext.Stage_Criteria AS T) AS T2
            ON T1.Criteria_Id = T2.Criteria_Id
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Stage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stage
        [CodeFirstDatabaseSchema.Stage](T3.Stage_Id, T3.Stage_Name, T3.[Stage.Study_Id])
    FROM (
        SELECT T1.Stage_Id, T1.Stage_Name, T2.[Stage.Study_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS Stage_Id, 
                T.Name AS Stage_Name, 
                True AS _from0
            FROM StudyContext.Stages AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.Study_Stages_Target).Id AS Stage_Id, 
                Key(T.Study_Stages_Source).Id AS [Stage.Study_Id], 
                True AS _from1
            FROM StudyContext.Study_Stages AS T) AS T2
            ON T1.Stage_Id = T2.Stage_Id
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Study.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Study
        [CodeFirstDatabaseSchema.Study](T3.Study_Id, T3.Study_Name, T3.Study_CurrentStage, T3.Study_IsFinished, T3.[Study.Team_Id])
    FROM (
        SELECT T1.Study_Id, T1.Study_Name, T1.Study_CurrentStage, T1.Study_IsFinished, T2.[Study.Team_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS Study_Id, 
                T.Name AS Study_Name, 
                T.CurrentStage AS Study_CurrentStage, 
                T.IsFinished AS Study_IsFinished, 
                True AS _from0
            FROM StudyContext.Studies AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.Team_Studies_Target).Id AS Study_Id, 
                Key(T.Team_Studies_Source).Id AS [Study.Team_Id], 
                True AS _from1
            FROM StudyContext.Team_Studies AS T) AS T2
            ON T1.Study_Id = T2.Study_Id
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Item.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Item
        [CodeFirstDatabaseSchema.Item](T3.Item_Id, T3.[Item.Study_Id])
    FROM (
        SELECT T1.Item_Id, T2.[Item.Study_Id], (T2._from0 AND T2._from0 IS NOT NULL) AS _from0, T1._from1
        FROM  (
            SELECT 
                T.Id AS Item_Id, 
                True AS _from1
            FROM StudyContext.Items AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.Study_Items_Target).Id AS Item_Id, 
                Key(T.Study_Items_Source).Id AS [Item.Study_Id], 
                True AS _from0
            FROM StudyContext.Study_Items AS T) AS T2
            ON T1.Item_Id = T2.Item_Id
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.StudyTask.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StudyTask
        [CodeFirstDatabaseSchema.StudyTask](T3.StudyTask_Id, T3.StudyTask_TaskType, T3.StudyTask_IsFinished, T3.StudyTask_IsDeliverable, T3.[StudyTask.Stage_Id])
    FROM (
        SELECT T1.StudyTask_Id, T1.StudyTask_TaskType, T1.StudyTask_IsFinished, T1.StudyTask_IsDeliverable, T2.[StudyTask.Stage_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS StudyTask_Id, 
                CAST(T.TaskType AS [Edm.Int32]) AS StudyTask_TaskType, 
                T.IsFinished AS StudyTask_IsFinished, 
                T.IsDeliverable AS StudyTask_IsDeliverable, 
                True AS _from0
            FROM StudyContext.Tasks AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.StudyTask_Stage_Source).Id AS StudyTask_Id, 
                Key(T.StudyTask_Stage_Target).Id AS [StudyTask.Stage_Id], 
                True AS _from1
            FROM StudyContext.StudyTask_Stage AS T) AS T2
            ON T1.StudyTask_Id = T2.StudyTask_Id
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TaskRequestedData.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskRequestedData
        [CodeFirstDatabaseSchema.TaskRequestedData](T4.TaskRequestedData_Id, T4.[TaskRequestedData.StudyTask_Id], T4.[TaskRequestedData.User_Id])
    FROM (
        SELECT T1.TaskRequestedData_Id, T3.[TaskRequestedData.StudyTask_Id], T2.[TaskRequestedData.User_Id], (T3._from0 AND T3._from0 IS NOT NULL) AS _from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, T1._from2
        FROM  (
            SELECT 
                T.Id AS TaskRequestedData_Id, 
                True AS _from2
            FROM StudyContext.EnteredData AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.User_Tasks_Target).Id AS TaskRequestedData_Id, 
                Key(T.User_Tasks_Source).Id AS [TaskRequestedData.User_Id], 
                True AS _from1
            FROM StudyContext.User_Tasks AS T) AS T2
            ON T1.TaskRequestedData_Id = T2.TaskRequestedData_Id
            LEFT OUTER JOIN (
            SELECT 
                Key(T.TaskRequestedData_StudyTask_Source).Id AS TaskRequestedData_Id, 
                Key(T.TaskRequestedData_StudyTask_Target).Id AS [TaskRequestedData.StudyTask_Id], 
                True AS _from0
            FROM StudyContext.TaskRequestedData_StudyTask AS T) AS T3
            ON T1.TaskRequestedData_Id = T3.TaskRequestedData_Id
    ) AS T4");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.DataField.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DataField
        [CodeFirstDatabaseSchema.DataField](T3.DataField_Id, T3.DataField_Name, T3.DataField_Description, T3.DataField_FieldType, T3.[DataField.TaskRequestedData_Id])
    FROM (
        SELECT T1.DataField_Id, T1.DataField_Name, T1.DataField_Description, T1.DataField_FieldType, T2.[DataField.TaskRequestedData_Id], T1._from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1
        FROM  (
            SELECT 
                T.Id AS DataField_Id, 
                T.Name AS DataField_Name, 
                T.Description AS DataField_Description, 
                CAST(T.FieldType AS [Edm.Int32]) AS DataField_FieldType, 
                True AS _from0
            FROM StudyContext.DataFields AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.TaskRequestedData_Data_Target).Id AS DataField_Id, 
                Key(T.TaskRequestedData_Data_Source).Id AS [DataField.TaskRequestedData_Id], 
                True AS _from1
            FROM StudyContext.TaskRequestedData_Data AS T) AS T2
            ON T1.DataField_Id = T2.DataField_Id
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing User
        [CodeFirstDatabaseSchema.User](T1.User_Id, T1.User_Name, T1.User_Metadata)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Name AS User_Name, 
            T.Metadata AS User_Metadata, 
            True AS _from0
        FROM StudyContext.Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.UserStudies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserStudies
        [CodeFirstDatabaseSchema.UserStudies](T4.UserStudies_Id, T4.UserStudies_StudyRole, T4.[UserStudies.Stage_Id], T4.[UserStudies.User_Id])
    FROM (
        SELECT T1.UserStudies_Id, T1.UserStudies_StudyRole, T3.[UserStudies.Stage_Id], T2.[UserStudies.User_Id], (T3._from0 AND T3._from0 IS NOT NULL) AS _from0, (T2._from1 AND T2._from1 IS NOT NULL) AS _from1, T1._from2
        FROM  (
            SELECT 
                T.Id AS UserStudies_Id, 
                CAST(T.StudyRole AS [Edm.Int32]) AS UserStudies_StudyRole, 
                True AS _from2
            FROM StudyContext.UserStudies AS T) AS T1
            LEFT OUTER JOIN (
            SELECT 
                Key(T.UserStudies_User_Source).Id AS UserStudies_Id, 
                Key(T.UserStudies_User_Target).Id AS [UserStudies.User_Id], 
                True AS _from1
            FROM StudyContext.UserStudies_User AS T) AS T2
            ON T1.UserStudies_Id = T2.UserStudies_Id
            LEFT OUTER JOIN (
            SELECT 
                Key(T.UserStudies_Stage_Source).Id AS UserStudies_Id, 
                Key(T.UserStudies_Stage_Target).Id AS [UserStudies.Stage_Id], 
                True AS _from0
            FROM StudyContext.UserStudies_Stage AS T) AS T3
            ON T1.UserStudies_Id = T3.UserStudies_Id
    ) AS T4");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Team.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Team
        [CodeFirstDatabaseSchema.Team](T1.Team_Id, T1.Team_Name, T1.Team_Metadata)
    FROM (
        SELECT 
            T.Id AS Team_Id, 
            T.Name AS Team_Name, 
            T.Metadata AS Team_Metadata, 
            True AS _from0
        FROM StudyContext.Teams AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.TeamUser.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TeamUser
        [CodeFirstDatabaseSchema.TeamUser](T1.[TeamUser.Team_Id], T1.[TeamUser.User_Id])
    FROM (
        SELECT 
            Key(T.Team_Users_Source).Id AS [TeamUser.Team_Id], 
            Key(T.Team_Users_Target).Id AS [TeamUser.User_Id], 
            True AS _from0
        FROM StudyContext.Team_Users AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.Criteria.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Criteria
        [StudyConfigurationServer.Models.Data.Criteria](T1.Criteria_Id, T1.Criteria_Name, T1.Criteria_Description, T1.Criteria_DataType, T1.Criteria_Rule) WITH 
        RELATIONSHIP(CREATEREF(StudyContext.Stages, ROW(T1.[Stage_Criteria.Stage_Criteria_Source.Id]),[StudyConfigurationServer.Models.Data.Stage]),[StudyConfigurationServer.Models.Data.Stage_Criteria],Stage_Criteria_Target,Stage_Criteria_Source) 
    FROM (
        SELECT 
            T.Id AS Criteria_Id, 
            T.Name AS Criteria_Name, 
            T.Description AS Criteria_Description, 
            CAST(T.DataType AS [StudyConfigurationServer.Models.Data.DataType]) AS Criteria_DataType, 
            CAST(T.Rule AS [StudyConfigurationServer.Models.Data.CriteriaRule]) AS Criteria_Rule, 
            True AS _from0, 
            T.Stage_Id AS [Stage_Criteria.Stage_Criteria_Source.Id]
        FROM CodeFirstDatabase.Criteria AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.Stage_Criteria.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stage_Criteria
        [StudyConfigurationServer.Models.Data.Stage_Criteria](T3.[Stage_Criteria.Stage_Criteria_Source], T3.[Stage_Criteria.Stage_Criteria_Target])
    FROM (
        SELECT -- Constructing Stage_Criteria_Source
            CreateRef(StudyContext.Stages, row(T2.[Stage_Criteria.Stage_Criteria_Source.Id]), [StudyConfigurationServer.Models.Data.Stage]) AS [Stage_Criteria.Stage_Criteria_Source], 
            T2.[Stage_Criteria.Stage_Criteria_Target]
        FROM (
            SELECT -- Constructing Stage_Criteria_Target
                T1.[Stage_Criteria.Stage_Criteria_Source.Id], 
                CreateRef(StudyContext.Criteria, row(T1.[Stage_Criteria.Stage_Criteria_Target.Id]), [StudyConfigurationServer.Models.Data.Criteria]) AS [Stage_Criteria.Stage_Criteria_Target]
            FROM (
                SELECT 
                    T.Stage_Id AS [Stage_Criteria.Stage_Criteria_Source.Id], 
                    T.Id AS [Stage_Criteria.Stage_Criteria_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Criteria AS T
                WHERE T.Stage_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.Stages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Stages
        [StudyConfigurationServer.Models.Data.Stage](T1.Stage_Id, T1.Stage_Name) WITH 
        RELATIONSHIP(CREATEREF(StudyContext.Studies, ROW(T1.[Study_Stages.Study_Stages_Source.Id]),[StudyConfigurationServer.Models.Data.Study]),[StudyConfigurationServer.Models.Data.Study_Stages],Study_Stages_Target,Study_Stages_Source) 
    FROM (
        SELECT 
            T.Id AS Stage_Id, 
            T.Name AS Stage_Name, 
            True AS _from0, 
            T.Study_Id AS [Study_Stages.Study_Stages_Source.Id]
        FROM CodeFirstDatabase.Stage AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.Study_Stages.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Study_Stages
        [StudyConfigurationServer.Models.Data.Study_Stages](T3.[Study_Stages.Study_Stages_Source], T3.[Study_Stages.Study_Stages_Target])
    FROM (
        SELECT -- Constructing Study_Stages_Source
            CreateRef(StudyContext.Studies, row(T2.[Study_Stages.Study_Stages_Source.Id]), [StudyConfigurationServer.Models.Data.Study]) AS [Study_Stages.Study_Stages_Source], 
            T2.[Study_Stages.Study_Stages_Target]
        FROM (
            SELECT -- Constructing Study_Stages_Target
                T1.[Study_Stages.Study_Stages_Source.Id], 
                CreateRef(StudyContext.Stages, row(T1.[Study_Stages.Study_Stages_Target.Id]), [StudyConfigurationServer.Models.Data.Stage]) AS [Study_Stages.Study_Stages_Target]
            FROM (
                SELECT 
                    T.Study_Id AS [Study_Stages.Study_Stages_Source.Id], 
                    T.Id AS [Study_Stages.Study_Stages_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Stage AS T
                WHERE T.Study_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.Studies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Studies
        [StudyConfigurationServer.Models.Data.Study](T1.Study_Id, T1.Study_Name, T1.Study_CurrentStage, T1.Study_IsFinished) WITH 
        RELATIONSHIP(CREATEREF(StudyContext.Teams, ROW(T1.[Team_Studies.Team_Studies_Source.Id]),[StudyConfigurationServer.Models.Data.Team]),[StudyConfigurationServer.Models.Data.Team_Studies],Team_Studies_Target,Team_Studies_Source) 
    FROM (
        SELECT 
            T.Id AS Study_Id, 
            T.Name AS Study_Name, 
            T.CurrentStage AS Study_CurrentStage, 
            T.IsFinished AS Study_IsFinished, 
            True AS _from0, 
            T.Team_Id AS [Team_Studies.Team_Studies_Source.Id]
        FROM CodeFirstDatabase.Study AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.Team_Studies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Team_Studies
        [StudyConfigurationServer.Models.Data.Team_Studies](T3.[Team_Studies.Team_Studies_Source], T3.[Team_Studies.Team_Studies_Target])
    FROM (
        SELECT -- Constructing Team_Studies_Source
            CreateRef(StudyContext.Teams, row(T2.[Team_Studies.Team_Studies_Source.Id]), [StudyConfigurationServer.Models.Data.Team]) AS [Team_Studies.Team_Studies_Source], 
            T2.[Team_Studies.Team_Studies_Target]
        FROM (
            SELECT -- Constructing Team_Studies_Target
                T1.[Team_Studies.Team_Studies_Source.Id], 
                CreateRef(StudyContext.Studies, row(T1.[Team_Studies.Team_Studies_Target.Id]), [StudyConfigurationServer.Models.Data.Study]) AS [Team_Studies.Team_Studies_Target]
            FROM (
                SELECT 
                    T.Team_Id AS [Team_Studies.Team_Studies_Source.Id], 
                    T.Id AS [Team_Studies.Team_Studies_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Study AS T
                WHERE T.Team_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.Items.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Items
        [StudyConfigurationServer.Models.Data.Item](T1.Item_Id) WITH 
        RELATIONSHIP(CREATEREF(StudyContext.Studies, ROW(T1.[Study_Items.Study_Items_Source.Id]),[StudyConfigurationServer.Models.Data.Study]),[StudyConfigurationServer.Models.Data.Study_Items],Study_Items_Target,Study_Items_Source) 
    FROM (
        SELECT 
            T.Id AS Item_Id, 
            True AS _from0, 
            T.Study_Id AS [Study_Items.Study_Items_Source.Id]
        FROM CodeFirstDatabase.Item AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.Study_Items.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Study_Items
        [StudyConfigurationServer.Models.Data.Study_Items](T3.[Study_Items.Study_Items_Source], T3.[Study_Items.Study_Items_Target])
    FROM (
        SELECT -- Constructing Study_Items_Source
            CreateRef(StudyContext.Studies, row(T2.[Study_Items.Study_Items_Source.Id]), [StudyConfigurationServer.Models.Data.Study]) AS [Study_Items.Study_Items_Source], 
            T2.[Study_Items.Study_Items_Target]
        FROM (
            SELECT -- Constructing Study_Items_Target
                T1.[Study_Items.Study_Items_Source.Id], 
                CreateRef(StudyContext.Items, row(T1.[Study_Items.Study_Items_Target.Id]), [StudyConfigurationServer.Models.Data.Item]) AS [Study_Items.Study_Items_Target]
            FROM (
                SELECT 
                    T.Study_Id AS [Study_Items.Study_Items_Source.Id], 
                    T.Id AS [Study_Items.Study_Items_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.Item AS T
                WHERE T.Study_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.Tasks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tasks
        [StudyConfigurationServer.Models.Data.StudyTask](T1.StudyTask_Id, T1.StudyTask_TaskType, T1.StudyTask_IsFinished, T1.StudyTask_IsDeliverable) WITH 
        RELATIONSHIP(CREATEREF(StudyContext.Stages, ROW(T1.[StudyTask_Stage.StudyTask_Stage_Target.Id]),[StudyConfigurationServer.Models.Data.Stage]),[StudyConfigurationServer.Models.Data.StudyTask_Stage],StudyTask_Stage_Source,StudyTask_Stage_Target) 
    FROM (
        SELECT 
            T.Id AS StudyTask_Id, 
            CAST(T.TaskType AS [StudyConfigurationServer.Models.Data.Type]) AS StudyTask_TaskType, 
            T.IsFinished AS StudyTask_IsFinished, 
            T.IsDeliverable AS StudyTask_IsDeliverable, 
            True AS _from0, 
            T.Stage_Id AS [StudyTask_Stage.StudyTask_Stage_Target.Id]
        FROM CodeFirstDatabase.StudyTask AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.StudyTask_Stage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StudyTask_Stage
        [StudyConfigurationServer.Models.Data.StudyTask_Stage](T3.[StudyTask_Stage.StudyTask_Stage_Source], T3.[StudyTask_Stage.StudyTask_Stage_Target])
    FROM (
        SELECT -- Constructing StudyTask_Stage_Source
            CreateRef(StudyContext.Tasks, row(T2.[StudyTask_Stage.StudyTask_Stage_Source.Id]), [StudyConfigurationServer.Models.Data.StudyTask]) AS [StudyTask_Stage.StudyTask_Stage_Source], 
            T2.[StudyTask_Stage.StudyTask_Stage_Target]
        FROM (
            SELECT -- Constructing StudyTask_Stage_Target
                T1.[StudyTask_Stage.StudyTask_Stage_Source.Id], 
                CreateRef(StudyContext.Stages, row(T1.[StudyTask_Stage.StudyTask_Stage_Target.Id]), [StudyConfigurationServer.Models.Data.Stage]) AS [StudyTask_Stage.StudyTask_Stage_Target]
            FROM (
                SELECT 
                    T.Id AS [StudyTask_Stage.StudyTask_Stage_Source.Id], 
                    T.Stage_Id AS [StudyTask_Stage.StudyTask_Stage_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.StudyTask AS T
                WHERE T.Stage_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.EnteredData.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EnteredData
        [StudyConfigurationServer.Models.Data.TaskRequestedData](T1.TaskRequestedData_Id) WITH 
        RELATIONSHIP(CREATEREF(StudyContext.Tasks, ROW(T1.[TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Target.Id]),[StudyConfigurationServer.Models.Data.StudyTask]),[StudyConfigurationServer.Models.Data.TaskRequestedData_StudyTask],TaskRequestedData_StudyTask_Source,TaskRequestedData_StudyTask_Target) 
        RELATIONSHIP(CREATEREF(StudyContext.Users, ROW(T1.[User_Tasks.User_Tasks_Source.Id]),[StudyConfigurationServer.Models.Data.User]),[StudyConfigurationServer.Models.Data.User_Tasks],User_Tasks_Target,User_Tasks_Source) 
    FROM (
        SELECT 
            T.Id AS TaskRequestedData_Id, 
            True AS _from0, 
            T.StudyTask_Id AS [TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Target.Id], 
            T.User_Id AS [User_Tasks.User_Tasks_Source.Id]
        FROM CodeFirstDatabase.TaskRequestedData AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.TaskRequestedData_StudyTask.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskRequestedData_StudyTask
        [StudyConfigurationServer.Models.Data.TaskRequestedData_StudyTask](T3.[TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Source], T3.[TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Target])
    FROM (
        SELECT -- Constructing TaskRequestedData_StudyTask_Source
            CreateRef(StudyContext.EnteredData, row(T2.[TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Source.Id]), [StudyConfigurationServer.Models.Data.TaskRequestedData]) AS [TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Source], 
            T2.[TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Target]
        FROM (
            SELECT -- Constructing TaskRequestedData_StudyTask_Target
                T1.[TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Source.Id], 
                CreateRef(StudyContext.Tasks, row(T1.[TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Target.Id]), [StudyConfigurationServer.Models.Data.StudyTask]) AS [TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Target]
            FROM (
                SELECT 
                    T.Id AS [TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Source.Id], 
                    T.StudyTask_Id AS [TaskRequestedData_StudyTask.TaskRequestedData_StudyTask_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.TaskRequestedData AS T
                WHERE T.StudyTask_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.User_Tasks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing User_Tasks
        [StudyConfigurationServer.Models.Data.User_Tasks](T3.[User_Tasks.User_Tasks_Source], T3.[User_Tasks.User_Tasks_Target])
    FROM (
        SELECT -- Constructing User_Tasks_Source
            CreateRef(StudyContext.Users, row(T2.[User_Tasks.User_Tasks_Source.Id]), [StudyConfigurationServer.Models.Data.User]) AS [User_Tasks.User_Tasks_Source], 
            T2.[User_Tasks.User_Tasks_Target]
        FROM (
            SELECT -- Constructing User_Tasks_Target
                T1.[User_Tasks.User_Tasks_Source.Id], 
                CreateRef(StudyContext.EnteredData, row(T1.[User_Tasks.User_Tasks_Target.Id]), [StudyConfigurationServer.Models.Data.TaskRequestedData]) AS [User_Tasks.User_Tasks_Target]
            FROM (
                SELECT 
                    T.User_Id AS [User_Tasks.User_Tasks_Source.Id], 
                    T.Id AS [User_Tasks.User_Tasks_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.TaskRequestedData AS T
                WHERE T.User_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.DataFields.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing DataFields
        [StudyConfigurationServer.Models.Data.DataField](T1.DataField_Id, T1.DataField_Name, T1.DataField_Description, T1.DataField_FieldType) WITH 
        RELATIONSHIP(CREATEREF(StudyContext.EnteredData, ROW(T1.[TaskRequestedData_Data.TaskRequestedData_Data_Source.Id]),[StudyConfigurationServer.Models.Data.TaskRequestedData]),[StudyConfigurationServer.Models.Data.TaskRequestedData_Data],TaskRequestedData_Data_Target,TaskRequestedData_Data_Source) 
    FROM (
        SELECT 
            T.Id AS DataField_Id, 
            T.Name AS DataField_Name, 
            T.Description AS DataField_Description, 
            CAST(T.FieldType AS [StudyConfigurationServer.Models.Data.DataType]) AS DataField_FieldType, 
            True AS _from0, 
            T.TaskRequestedData_Id AS [TaskRequestedData_Data.TaskRequestedData_Data_Source.Id]
        FROM CodeFirstDatabase.DataField AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.TaskRequestedData_Data.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TaskRequestedData_Data
        [StudyConfigurationServer.Models.Data.TaskRequestedData_Data](T3.[TaskRequestedData_Data.TaskRequestedData_Data_Source], T3.[TaskRequestedData_Data.TaskRequestedData_Data_Target])
    FROM (
        SELECT -- Constructing TaskRequestedData_Data_Source
            CreateRef(StudyContext.EnteredData, row(T2.[TaskRequestedData_Data.TaskRequestedData_Data_Source.Id]), [StudyConfigurationServer.Models.Data.TaskRequestedData]) AS [TaskRequestedData_Data.TaskRequestedData_Data_Source], 
            T2.[TaskRequestedData_Data.TaskRequestedData_Data_Target]
        FROM (
            SELECT -- Constructing TaskRequestedData_Data_Target
                T1.[TaskRequestedData_Data.TaskRequestedData_Data_Source.Id], 
                CreateRef(StudyContext.DataFields, row(T1.[TaskRequestedData_Data.TaskRequestedData_Data_Target.Id]), [StudyConfigurationServer.Models.Data.DataField]) AS [TaskRequestedData_Data.TaskRequestedData_Data_Target]
            FROM (
                SELECT 
                    T.TaskRequestedData_Id AS [TaskRequestedData_Data.TaskRequestedData_Data_Source.Id], 
                    T.Id AS [TaskRequestedData_Data.TaskRequestedData_Data_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.DataField AS T
                WHERE T.TaskRequestedData_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Users
        [StudyConfigurationServer.Models.Data.User](T1.User_Id, T1.User_Name, T1.User_Metadata)
    FROM (
        SELECT 
            T.Id AS User_Id, 
            T.Name AS User_Name, 
            T.Metadata AS User_Metadata, 
            True AS _from0
        FROM CodeFirstDatabase.User AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.UserStudies.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserStudies
        [StudyConfigurationServer.Models.Data.UserStudies](T1.UserStudies_Id, T1.UserStudies_StudyRole) WITH 
        RELATIONSHIP(CREATEREF(StudyContext.Stages, ROW(T1.[UserStudies_Stage.UserStudies_Stage_Target.Id]),[StudyConfigurationServer.Models.Data.Stage]),[StudyConfigurationServer.Models.Data.UserStudies_Stage],UserStudies_Stage_Source,UserStudies_Stage_Target) 
        RELATIONSHIP(CREATEREF(StudyContext.Users, ROW(T1.[UserStudies_User.UserStudies_User_Target.Id]),[StudyConfigurationServer.Models.Data.User]),[StudyConfigurationServer.Models.Data.UserStudies_User],UserStudies_User_Source,UserStudies_User_Target) 
    FROM (
        SELECT 
            T.Id AS UserStudies_Id, 
            CAST(T.StudyRole AS [StudyConfigurationServer.Models.Data.Role]) AS UserStudies_StudyRole, 
            True AS _from0, 
            T.Stage_Id AS [UserStudies_Stage.UserStudies_Stage_Target.Id], 
            T.User_Id AS [UserStudies_User.UserStudies_User_Target.Id]
        FROM CodeFirstDatabase.UserStudies AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.UserStudies_Stage.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserStudies_Stage
        [StudyConfigurationServer.Models.Data.UserStudies_Stage](T3.[UserStudies_Stage.UserStudies_Stage_Source], T3.[UserStudies_Stage.UserStudies_Stage_Target])
    FROM (
        SELECT -- Constructing UserStudies_Stage_Source
            CreateRef(StudyContext.UserStudies, row(T2.[UserStudies_Stage.UserStudies_Stage_Source.Id]), [StudyConfigurationServer.Models.Data.UserStudies]) AS [UserStudies_Stage.UserStudies_Stage_Source], 
            T2.[UserStudies_Stage.UserStudies_Stage_Target]
        FROM (
            SELECT -- Constructing UserStudies_Stage_Target
                T1.[UserStudies_Stage.UserStudies_Stage_Source.Id], 
                CreateRef(StudyContext.Stages, row(T1.[UserStudies_Stage.UserStudies_Stage_Target.Id]), [StudyConfigurationServer.Models.Data.Stage]) AS [UserStudies_Stage.UserStudies_Stage_Target]
            FROM (
                SELECT 
                    T.Id AS [UserStudies_Stage.UserStudies_Stage_Source.Id], 
                    T.Stage_Id AS [UserStudies_Stage.UserStudies_Stage_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.UserStudies AS T
                WHERE T.Stage_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.UserStudies_User.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserStudies_User
        [StudyConfigurationServer.Models.Data.UserStudies_User](T3.[UserStudies_User.UserStudies_User_Source], T3.[UserStudies_User.UserStudies_User_Target])
    FROM (
        SELECT -- Constructing UserStudies_User_Source
            CreateRef(StudyContext.UserStudies, row(T2.[UserStudies_User.UserStudies_User_Source.Id]), [StudyConfigurationServer.Models.Data.UserStudies]) AS [UserStudies_User.UserStudies_User_Source], 
            T2.[UserStudies_User.UserStudies_User_Target]
        FROM (
            SELECT -- Constructing UserStudies_User_Target
                T1.[UserStudies_User.UserStudies_User_Source.Id], 
                CreateRef(StudyContext.Users, row(T1.[UserStudies_User.UserStudies_User_Target.Id]), [StudyConfigurationServer.Models.Data.User]) AS [UserStudies_User.UserStudies_User_Target]
            FROM (
                SELECT 
                    T.Id AS [UserStudies_User.UserStudies_User_Source.Id], 
                    T.User_Id AS [UserStudies_User.UserStudies_User_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.UserStudies AS T
                WHERE T.User_Id IS NOT NULL
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for StudyContext.Teams.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Teams
        [StudyConfigurationServer.Models.Data.Team](T1.Team_Id, T1.Team_Name, T1.Team_Metadata)
    FROM (
        SELECT 
            T.Id AS Team_Id, 
            T.Name AS Team_Name, 
            T.Metadata AS Team_Metadata, 
            True AS _from0
        FROM CodeFirstDatabase.Team AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for StudyContext.Team_Users.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Team_Users
        [StudyConfigurationServer.Models.Data.Team_Users](T3.[Team_Users.Team_Users_Source], T3.[Team_Users.Team_Users_Target])
    FROM (
        SELECT -- Constructing Team_Users_Source
            CreateRef(StudyContext.Teams, row(T2.[Team_Users.Team_Users_Source.Id]), [StudyConfigurationServer.Models.Data.Team]) AS [Team_Users.Team_Users_Source], 
            T2.[Team_Users.Team_Users_Target]
        FROM (
            SELECT -- Constructing Team_Users_Target
                T1.[Team_Users.Team_Users_Source.Id], 
                CreateRef(StudyContext.Users, row(T1.[Team_Users.Team_Users_Target.Id]), [StudyConfigurationServer.Models.Data.User]) AS [Team_Users.Team_Users_Target]
            FROM (
                SELECT 
                    T.Team_Id AS [Team_Users.Team_Users_Source.Id], 
                    T.User_Id AS [Team_Users.Team_Users_Target.Id], 
                    True AS _from0
                FROM CodeFirstDatabase.TeamUser AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
